# Logrotate Configuration Templates for Docker Services
# Place these configurations in /etc/logrotate.d/

# ===== TEMPLATE 1: Standard Docker Application Logs =====
# File: /etc/logrotate.d/docker-apps
# Usage: Most containerized applications with moderate logging
/path/to/docker/*/logs/*.log {
    size 50M
    missingok
    rotate 5
    compress
    delaycompress
    notifempty
    create 644 user group
    # Optional: restart service if needed
    # postrotate
    #     systemctl reload service_name
    # endscript
}

# ===== TEMPLATE 2: High-Volume Service Logs =====  
# File: /etc/logrotate.d/docker-high-volume
# Usage: Media servers, download clients, high-traffic services
/path/to/docker/media-services/*/logs/*.log {
    size 25M
    missingok
    rotate 3
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        # Send HUP signal to container to reopen log files
        docker kill --signal=HUP container_name 2>/dev/null || true
    endscript
}

# ===== TEMPLATE 3: Security/Monitoring Service Logs =====
# File: /etc/logrotate.d/docker-security
# Usage: Security tools, network monitors, SIEM components
/path/to/docker/security/*/logs/*.log {
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        # Common signal for security tools to reopen logs
        docker kill --signal=HUP security_container 2>/dev/null || true
    endscript
}

# Special handling for JSON event logs (like EVE JSON from Suricata)
/path/to/docker/security/*/logs/*.json {
    size 100M
    missingok
    rotate 10
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        docker kill --signal=HUP security_container 2>/dev/null || true
    endscript
}

# ===== TEMPLATE 4: Database Logs =====
# File: /etc/logrotate.d/docker-databases
# Usage: MySQL, PostgreSQL, MongoDB, etc.
/path/to/docker/databases/*/logs/*.log {
    weekly
    missingok
    rotate 4
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        # Most databases handle log rotation gracefully
        docker exec database_container mysqladmin flush-logs 2>/dev/null || true
    endscript
}

# ===== TEMPLATE 5: Web Server Access Logs =====
# File: /etc/logrotate.d/docker-webservers
# Usage: Nginx, Apache, Traefik access logs
/path/to/docker/webservers/*/logs/access.log {
    daily
    missingok
    rotate 14
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        # Reload web server configuration
        docker exec webserver_container nginx -s reload 2>/dev/null || true
    endscript
}

/path/to/docker/webservers/*/logs/error.log {
    size 10M
    missingok
    rotate 5
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        docker exec webserver_container nginx -s reload 2>/dev/null || true
    endscript
}

# ===== TEMPLATE 6: Application-Specific Logs =====
# File: /etc/logrotate.d/docker-app-specific
# Usage: Custom applications with specific log patterns

# Example: Download clients (SABnzbd, NZBGet, qBittorrent)
/path/to/docker/downloads/*/logs/*.log {
    size 20M
    missingok
    rotate 3
    compress
    delaycompress
    notifempty
    create 644 user group
}

# Example: *arr stack (Sonarr, Radarr, Lidarr, etc.)
/path/to/docker/*arr/config/logs/*.log {
    size 10M
    missingok
    rotate 5
    compress
    delaycompress
    notifempty
    create 644 user group
}

# Example: Home automation systems
/path/to/docker/homeassistant/config/*.log {
    size 50M
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 644 user group
    postrotate
        # Restart Home Assistant service
        docker restart homeassistant 2>/dev/null || true
    endscript
}

# ===== CUSTOMIZATION GUIDELINES =====
# 
# Size-based rotation triggers:
# - size 10M   : Small/quiet services
# - size 25M   : Medium services  
# - size 50M   : Standard services
# - size 100M  : High-volume services
# - size 500M  : Very high-volume (use sparingly)
#
# Time-based rotation:
# - hourly     : Extremely high-volume (use with small file counts)
# - daily      : High-volume services
# - weekly     : Standard services
# - monthly    : Low-volume services
#
# Retention (rotate N):
# - rotate 2-3 : Short-term retention, space-constrained
# - rotate 5-7 : Standard retention
# - rotate 10+ : Long-term retention needs
#
# Compression options:
# - compress        : Always compress old logs
# - delaycompress   : Don't compress the first rotated file
# - nocompress      : Never compress (faster but uses more space)
#
# File creation:
# - create 644 user group : Standard permissions
# - create 600 user group : Restricted permissions for sensitive logs
# - nocreate             : Don't create new log file (app must handle)
#
# Error handling:
# - missingok    : Don't error if log file doesn't exist
# - notifempty   : Don't rotate empty files
# - sharedscripts: Run postrotate once for all files (not per file)